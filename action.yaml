name: 'Lyrid Deploy'
branding:
  icon: 'airplay'  
  color: 'gray-dark'
description: 'Deploy app on Lyrid'
inputs:
  lyrid-key:  
    description: 'Lyrid Access Key'
    required: true
  lyrid-secret:  
    description: 'Lyrid Access Secret'
    required: true
  lyrid-url:  
    description: 'Lyrid URL'
    required: true
    default: 'https://api.lyrid.io'
  instanceid:
    description: 'Deploy to specific cluster. Input your UniqueInstanceID. (ex: a1b2c3d4)'
    default: ''
  instancetag:
    description: 'Deploy to several cluster according to tag'
    default: ''
  regionid:
    description: 'Deploy to specific RegionID. if no deployment strategy is found, defaulted to (uswest1)'
    default: ''
  distributed:
    description: 'Enable distributed deployment'
    default: false
runs:
  using: "composite"
  steps: 
    - run: rm -rf ~/.lc || true
      shell: bash
    - name: Deploying to Lyrid Platform
      run: |
       sudo rm -rf $(which lc) || true
       sudo bash ${{ github.action_path }}/install.sh 
       lc config add --config lyrid_github --key ${{ inputs.lyrid-key }} --secret ${{ inputs.lyrid-secret }} --url ${{ inputs.lyrid-url }}
       lc user info
       echo "instanceid ${{ inputs.instanceid }}"
       echo "instancetag ${{ inputs.instancetag }}"
       echo "regionid ${{ inputs.regionid }}"
       echo "distributed ${{ inputs.distributed }}"
       if [[ ${{ inputs.instanceid }} != '' ]]; then
         lc code submit -i ${{ inputs.instanceid }}
       elif [[ ${{ inputs.instancetag }} != '' ]]; then
         lc code submit --itag ${{ inputs.instancetag }}
       elif [[ ${{ inputs.regionid }} != '' ]]; then
         lc code submit --rid ${{ inputs.regionid }}
       elif [[ ${{ inputs.distributed }} == true ]]; then
         lc code submit -d
       else
         lc code submit
       fi
      shell: bash
